"use client"

import { useState } from "react"
import { Sidebar } from "@/components/layout/sidebar"
import { UploadZone } from "@/components/roast/upload-zone"
import { RoastSettings } from "@/components/roast/roast-settings"
import { UserContextForm, type UserContext } from "@/components/roast/user-context-form"
import { MarketReadinessScore } from "@/components/roast/market-readiness-score"
import { FeedbackCard } from "@/components/roast/feedback-card"
import { useGenkitCVAnalysis } from "@/hooks/use-genkit-cv-analysis"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Alert, AlertDescription } from "@/components/ui/alert"
import { Download, Share2, CheckCircle, AlertCircle, RotateCcw, ChevronRight, Zap, Heart } from "lucide-react"

type RoastTone = "light" | "heavy"

export default function RoastMyCVPage() {
  const [sidebarCollapsed, setSidebarCollapsed] = useState(false)
  const [roastTone, setRoastTone] = useState<RoastTone>("light")
  const [showEmojis, setShowEmojis] = useState(true)
  const [focusAreas, setFocusAreas] = useState<string[]>(["Content & Writing", "Format & Design"])
  const [userContext, setUserContext] = useState<UserContext>({})

  const { analyzeCV, isAnalyzing, result, error, uploadProgress, reset } = useGenkitCVAnalysis()

  const handleFileUpload = async (file: File) => {
    await analyzeCV(file, {
      roastTone,
      focusAreas,
      showEmojis,
      userContext,
    })
  }

  const handleDownload = () => {
    if (!result) return

    const content = `CV ROAST RESULTS - ${roastTone.toUpperCase()} ROAST 🔥
File: ${result.metadata.fileName}
Generated: ${new Date().toLocaleDateString()}
Roast Level: ${roastTone === "light" ? "Light Roast ☕" : "Heavy Roast 🔥"}
Processing Time: ${result.processingTime}s
Market Readiness Score: ${result.marketReadiness.score}/100
Word Count: ${result.metadata.wordCount}
${result.metadata.pageCount ? `Pages: ${result.metadata.pageCount}` : ""}

OVERALL FEEDBACK:
${result.overall}

MARKET READINESS ANALYSIS:
Score: ${result.marketReadiness.score}/100

Strengths:
${result.marketReadiness.strengths.map((s, i) => `${i + 1}. ${s}`).join("\n")}

Top Priorities:
${result.marketReadiness.priorities.map((p, i) => `${i + 1}. ${p}`).join("\n")}

Kenya Job Market Tips:
${result.kenyanJobMarketTips.map((tip, i) => `${i + 1}. ${tip}`).join("\n")}

DETAILED FEEDBACK:
${result.feedback
  .map(
    (item, i) => `
${i + 1}. ${item.title} (${item.category})
${item.content}
💡 Quick Fix: ${item.tip}
${item.kenyanContext ? `🇰🇪 Kenya Context: ${item.kenyanContext}` : ""}
`,
  )
  .join("")}

Generated by Kazikit CV Roaster with Genkit 🇰🇪
Made with ❤️ for African job seekers
`

    const blob = new Blob([content], { type: "text/plain" })
    const url = URL.createObjectURL(blob)
    const a = document.createElement("a")
    a.href = url
    a.download = `cv-roast-genkit-${roastTone}-${Date.now()}.txt`
    a.click()
    URL.revokeObjectURL(url)
  }

  const handleShare = async () => {
    const shareData = {
      title: "My CV just got roasted by AI! 🔥",
      text: `I just got my resume analyzed by Kazikit's AI CV Roaster with Genkit - scored ${result?.marketReadiness.score}/100 for Kenya job market readiness! Made in Kenya for African job seekers 🇰🇪`,
      url: window.location.href,
    }

    if (navigator.share && navigator.canShare(shareData)) {
      try {
        await navigator.share(shareData)
      } catch (err) {
        // Fallback to clipboard
        await navigator.clipboard.writeText(`${shareData.text} ${shareData.url}`)
      }
    } else {
      await navigator.clipboard.writeText(`${shareData.text} ${shareData.url}`)
    }
  }

  return (
    <div className="flex h-screen bg-gradient-to-br from-emerald-50/50 to-blue-50/30 relative overflow-hidden">
      {/* Subtle background pattern */}
      <div
        className="absolute inset-0 opacity-5"
        style={{
          backgroundImage: `url("data:image/svg+xml,%3Csvg width='100' height='100' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%2310b981' fillOpacity='0.1'%3E%3Cpath d='M50 50c0-27.614-22.386-50-50-50v50h50zM0 50v50h50c0-27.614-22.386-50-50-50z'/%3E%3C/g%3E%3C/svg%3E")`,
        }}
      />

      <Sidebar collapsed={sidebarCollapsed} onToggle={() => setSidebarCollapsed(!sidebarCollapsed)} />

      <div className="flex-1 flex flex-col overflow-hidden relative z-10">
        {/* Header */}
        <header className="bg-white/90 backdrop-blur-sm border-b border-gray-200 px-6 py-4">
          <div className="flex items-center justify-between">
            <div>
              <div className="flex items-center gap-2 text-sm text-gray-500 mb-1">
                <span>Dashboard</span>
                <ChevronRight className="w-4 h-4" />
                <span className="text-emerald-600 font-medium">CV Roaster</span>
              </div>
              <h1 className="text-2xl font-bold text-gray-900 flex items-center gap-2">
                Roast My CV 🔥
                <Badge variant="outline" className="bg-emerald-50 text-emerald-700 border-emerald-200 text-xs">
                  Powered by Genkit
                </Badge>
                <Badge variant="outline" className="bg-blue-50 text-blue-700 border-blue-200 text-xs">
                  Made in Kenya 🇰🇪
                </Badge>
              </h1>
            </div>

            <div className="flex items-center gap-4">
              <Badge
                variant="outline"
                className="bg-gradient-to-r from-emerald-50 to-blue-50 text-emerald-700 border-emerald-200"
              >
                <Zap className="w-3 h-3 mr-1" />
                Hustler Plan 💪
              </Badge>
              <div className="text-right">
                <p className="text-sm font-medium text-gray-900">5 roasts remaining</p>
                <p className="text-xs text-emerald-600">Resets in 3 days</p>
              </div>
            </div>
          </div>
        </header>

        {/* Main Content */}
        <main className="flex-1 overflow-auto">
          <div className="max-w-6xl mx-auto p-6">
            {!result && !isAnalyzing && (
              <div className="grid lg:grid-cols-3 gap-6">
                <div className="lg:col-span-2">
                  <div className="mb-6">
                    <h2 className="text-xl font-semibold text-gray-900 mb-2">Upload Your CV</h2>
                    <p className="text-gray-600">
                      Get AI-powered feedback with market readiness scoring for Kenya and beyond! 🇰🇪
                    </p>
                  </div>

                  <UploadZone
                    onFileUpload={handleFileUpload}
                    isUploading={isAnalyzing}
                    uploadProgress={uploadProgress}
                    error={error?.message}
                    disabled={isAnalyzing}
                  />

                  {/* Local context tips */}
                  <div className="mt-6 grid md:grid-cols-3 gap-4">
                    <div className="text-center p-4 bg-white/60 rounded-lg border border-emerald-100">
                      <div className="w-12 h-12 bg-emerald-100 rounded-full flex items-center justify-center mx-auto mb-2">
                        <span className="text-emerald-600 text-xl">🏢</span>
                      </div>
                      <h3 className="font-medium text-gray-900 text-sm mb-1">NGO & UN Ready</h3>
                      <p className="text-xs text-gray-600">Optimized for international org applications</p>
                    </div>
                    <div className="text-center p-4 bg-white/60 rounded-lg border border-blue-100">
                      <div className="w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-2">
                        <span className="text-blue-600 text-xl">🚀</span>
                      </div>
                      <h3 className="font-medium text-gray-900 text-sm mb-1">Startup Friendly</h3>
                      <p className="text-xs text-gray-600">Perfect for tech & startup applications</p>
                    </div>
                    <div className="text-center p-4 bg-white/60 rounded-lg border border-yellow-100">
                      <div className="w-12 h-12 bg-yellow-100 rounded-full flex items-center justify-center mx-auto mb-2">
                        <span className="text-yellow-600 text-xl">🏛️</span>
                      </div>
                      <h3 className="font-medium text-gray-900 text-sm mb-1">Government Jobs</h3>
                      <p className="text-xs text-gray-600">Formatted for government positions</p>
                    </div>
                  </div>
                </div>

                <div className="space-y-6">
                  <RoastSettings
                    roastTone={roastTone}
                    onToneChange={setRoastTone}
                    showEmojis={showEmojis}
                    onEmojiToggle={setShowEmojis}
                    focusAreas={focusAreas}
                    onFocusAreasChange={setFocusAreas}
                  />

                  <UserContextForm userContext={userContext} onUserContextChange={setUserContext} />
                </div>
              </div>
            )}

            {error && !isAnalyzing && (
              <div className="max-w-2xl mx-auto">
                <Alert variant="destructive" className="border-red-200 bg-red-50">
                  <AlertCircle className="h-4 w-4" />
                  <AlertDescription className="text-red-800">{error.message}</AlertDescription>
                </Alert>
                <div className="mt-4 text-center">
                  <Button onClick={reset} variant="outline">
                    <RotateCcw className="w-4 h-4 mr-2" />
                    Try Again
                  </Button>
                </div>
              </div>
            )}

            {result && (
              <div className="space-y-6">
                {/* Results Header */}
                <div className="flex items-center justify-between flex-wrap gap-4">
                  <div>
                    <h2 className="text-2xl font-bold text-gray-900 mb-2 flex items-center gap-2">
                      Your CV Roast is Ready! 🔥
                      <Badge variant={roastTone === "light" ? "secondary" : "destructive"} className="text-xs">
                        {roastTone === "light" ? "Light Roast ☕" : "Heavy Roast 🔥"}
                      </Badge>
                    </h2>
                    <div className="flex items-center gap-4 text-sm text-gray-600 flex-wrap">
                      <span>File: {result.metadata.fileName}</span>
                      <span>•</span>
                      <span>Processed in {result.processingTime}s</span>
                      <span>•</span>
                      <span>{result.metadata.wordCount} words</span>
                      {result.metadata.pageCount && (
                        <>
                          <span>•</span>
                          <span>{result.metadata.pageCount} pages</span>
                        </>
                      )}
                      <span>•</span>
                      <div className="flex items-center gap-1">
                        <CheckCircle className="w-4 h-4 text-emerald-500" />
                        <span>Analysis complete</span>
                      </div>
                    </div>
                  </div>
                </div>

                {/* Market Readiness Score */}
                <MarketReadinessScore
                  score={result.marketReadiness.score}
                  strengths={result.marketReadiness.strengths}
                  priorities={result.marketReadiness.priorities}
                  kenyanJobMarketTips={result.kenyanJobMarketTips}
                />

                {/* Overall Feedback */}
                <Card className="border-emerald-200 bg-gradient-to-br from-emerald-50/50 to-blue-50/30 relative overflow-hidden">
                  {/* Pattern */}
                  <div
                    className="absolute top-0 right-0 w-32 h-32 opacity-10"
                    style={{
                      backgroundImage: `url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%2310b981' fillOpacity='0.3'%3E%3Cpath d='M30 30c0-16.569-13-431-30-30-30v30h30zM0 30v30h30c0-16.569-13.431-30-30-30z'/%3E%3C/g%3E%3C/svg%3E")`,
                    }}
                  />

                  <CardHeader className="relative z-10">
                    <CardTitle className="flex items-center gap-2">
                      <div className="w-8 h-8 bg-gradient-to-br from-emerald-500 to-blue-500 rounded-full flex items-center justify-center relative overflow-hidden">
                        <span className="text-white text-sm relative z-10">🤖</span>
                        <div
                          className="absolute inset-0 opacity-20"
                          style={{
                            backgroundImage: `url("data:image/svg+xml,%3Csvg width='20' height='20' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23fff' fillOpacity='0.3'%3E%3Ccircle cx='10' cy='10' r='2'/%3E%3C/g%3E%3C/svg%3E")`,
                          }}
                        />
                      </div>
                      Overall Assessment - AI Career Mentor
                    </CardTitle>
                  </CardHeader>
                  <CardContent className="relative z-10">
                    <p className="text-gray-700 leading-relaxed text-lg">
                      {showEmojis
                        ? result.overall
                        : result.overall.replace(
                            /[\u{1F600}-\u{1F64F}]|[\u{1F300}-\u{1F5FF}]|[\u{1F680}-\u{1F6FF}]|[\u{1F1E0}-\u{1F1FF}]|[\u{2600}-\u{26FF}]|[\u{2700}-\u{27BF}]/gu,
                            "",
                          )}
                    </p>
                  </CardContent>
                </Card>

                {/* Detailed Feedback */}
                <div>
                  <h3 className="text-lg font-semibold text-gray-900 mb-4 flex items-center gap-2">
                    Detailed Feedback ({result.feedback.length} points)
                    <Badge variant="outline" className="bg-emerald-50 text-emerald-700 border-emerald-200 text-xs">
                      Kenya Job Market Ready 🇰🇪
                    </Badge>
                  </h3>
                  <div className="space-y-4">
                    {result.feedback.map((feedback, index) => (
                      <FeedbackCard
                        key={index}
                        title={feedback.title}
                        content={feedback.content}
                        category={feedback.category}
                        severity={feedback.severity}
                        index={index + 1}
                        showEmojis={showEmojis}
                        tip={feedback.tip}
                      />
                    ))}
                  </div>
                </div>

                {/* Action Buttons */}
                <div className="flex flex-col sm:flex-row gap-4 justify-center pt-6 border-t border-gray-200">
                  <Button
                    onClick={handleDownload}
                    className="bg-emerald-600 hover:bg-emerald-700 text-white px-8 py-3 relative overflow-hidden"
                  >
                    <Download className="w-4 h-4 mr-2" />
                    Download Feedback
                    <div
                      className="absolute inset-0 opacity-10"
                      style={{
                        backgroundImage: `url("data:image/svg+xml,%3Csvg width='20' height='20' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23fff' fillOpacity='0.3'%3E%3Ccircle cx='10' cy='10' r='2'/%3E%3C/g%3E%3C/svg%3E")`,
                      }}
                    />
                  </Button>
                  <Button
                    onClick={handleShare}
                    variant="outline"
                    className="border-blue-600 text-blue-600 hover:bg-blue-50 px-8 py-3 bg-transparent"
                  >
                    <Share2 className="w-4 h-4 mr-2" />
                    Share My Roast
                  </Button>
                  <Button onClick={reset} variant="outline" className="px-8 py-3 bg-transparent">
                    <RotateCcw className="w-4 h-4 mr-2" />
                    Roast Another CV
                  </Button>
                </div>

                {/* Local context footer */}
                <div className="text-center pt-6 border-t border-gray-200">
                  <p className="text-sm text-gray-600 mb-2">
                    Made with <Heart className="w-4 h-4 inline text-red-500" /> by the{" "}
                    <span className="font-semibold text-emerald-600">Kazikit</span> team for African job seekers
                  </p>
                  <p className="text-xs text-emerald-600 font-medium">
                    Powered by Google Genkit • Helping you succeed in your career journey! 🚀🇰🇪
                  </p>
                </div>
              </div>
            )}
          </div>
        </main>
      </div>
    </div>
  )
}
